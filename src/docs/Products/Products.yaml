paths:
  /api/products/:
    get:
      summary: Obtains all the products created
      tags:
        - Products
      responses:
        "200":
          description: The products were successfully obtained
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
        "500":
          description: Internal server error
        "404":
          description: The carts were not found
    post:
      summary: Creates a new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/insertTheProduct'
      responses:
        "200":
          description: The product was successfully created
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
        "500":
          description: Internal server error
        "404":
          description: The carts were not found
      example:
        title: Lays
        description: Papas fritas Lays 500gr
        price: 2
        stock: 38
        code: lays500gr
        status: true

  /api/products/{pId}:
    get:
      summary: Obtains a specific product
      tags:
        - Products
      parameters:
        - name: pId
          in: path
          required: true
          description: Id of the product requested
          schema: 
            $type: String
      responses:
        "200":
          description: The product was successfully obtained
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
        "500":
          description: Internal server error
        "404":
          description: The carts were not found
    put:
      summary: Updates a product
      tags: 
        - Products
      parameters:
        - name: pId
          in: path
          required: true
          description: Id of the product to be updated
          schema: 
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/insertTheProduct'
      responses:
        "200":
          description: The product was successfully updated
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
        "500":
          description: Internal server error
        "404":
          description: The cart was not found
      example:
        title: Lays
        description: Papas fritas Lays 500gr
        price: 2
        stock: 38
        code: lays500gr
        status: true
  /api/products/delete/{pId}:
    delete:
      summary: Updates a product
      tags: 
        - Products
      parameters:
        - name: pId
          in: path
          required: true
          description: Id of the product to be deleted
          schema: 
            $type: String
      responses:
        "200":
          description: The product was successfully deleted
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
        "500":
          description: Internal server error
        "404":
          description: The carts were not found
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerated by mongo
        title:
          type: string
          description: Title of the product
        description:
          type: string
          description: Description of the product
        price:
          type: Number
          description: Price of the product
        thumbnail:
          type: string
          description: Thumbnail of the product
        code:
          type: string
          unique: true
          description: Unique identifier for the product
        owner:
          type: string
          description: Owner of the product, could be the owners email or the simply admin
        stock:
          type: Number
          description: Stock of the product
        status:
          type: Boolean
          description: Status of the product
      example:
        _id: ObjectId("64c68b0f456f4b4675841928")
        title: Lays
        description: Papas fritas Lays 500gr
        price: 2
        stock: 38
        code: lays500gr
        status: true
  requestBodies:
    insertTheProduct:
      type: object
      properties:
        title:
          type: string
          description: Title of the product
        description:
          type: string
          description: Description of the product
        price:
          type: Number
          description: Price of the product
        thumbnail:
          type: string
          description: Thumbnail of the product
        code:
          type: string
          unique: true
          description: Unique identifier for the product
        owner:
          type: string
          description: Owner of the product, could be the owners email or the simply admin
        stock:
          type: Number
          description: Stock of the product
        status:
          type: Boolean
          description: Status of the product
      example:
        title: Lays
        description: Papas fritas Lays 500gr
        price: 2
        stock: 38
        code: lays500gr
        status: true
